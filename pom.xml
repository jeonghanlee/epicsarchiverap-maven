<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.epics.archiverappliance</groupId>
  <artifactId>archappl</artifactId>
  <version>2025-06-01-rev1-LBNL-ALS-U</version>
  <packaging>jar</packaging>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <java.version>21</java.version>
    <src.main.dir>${project.basedir}/src/main</src.main.dir>
    <lib.dir>${project.basedir}/lib</lib.dir>
    <docs.dir>${project.basedir}/docs</docs.dir>
    <api.docs.dir>${docs.dir}/api</api.docs.dir>
    <classes.dir>${project.build.directory}/build/classes</classes.dir>
    <java.docs.output.path>${project.build.directory}/site/apidocs/docs/api</java.docs.output.path>
    <stage.dir>${project.build.directory}/stage</stage.dir>
    <!--
 intermediate files .txt lost thier path, so we have to define it specifically
-->
    <archapplsite>default</archapplsite>
    <default.sitespecific.path>${project.basedir}/src/sitespecific/${archapplsite}</default.sitespecific.path>
    <sitespecific.path>${default.sitespecific.path}</sitespecific.path>
    <tomcat.home>${env.TOMCAT_HOME}</tomcat.home>
    <junit.jupiter.version>5.9.3</junit.jupiter.version>
    <log4j.version>2.20.0</log4j.version>
    <selenium.version>4.22.0</selenium.version>
    <sphinx.skip>false</sphinx.skip>
    <jamtio.name>jamtio</jamtio.name>
    <jamtio.ver>071005</jamtio.ver>
    <redisnio.name>redisnio</redisnio.name>
    <redisnio.ver>0.0.1</redisnio.ver>
  </properties>
  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <id>clojars</id>
      <url>https://clojars.org/repo</url>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>local.org.epics</groupId>
      <artifactId>${jamtio.name}</artifactId>
      <version>${jamtio.ver}</version>
      <scope>system</scope>
      <systemPath>${lib.dir}/${jamtio.name}_${jamtio.ver}.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>local.org.epics</groupId>
      <artifactId>${redisnio.name}</artifactId>
      <version>${redisnio.ver}</version>
      <scope>system</scope>
      <systemPath>${lib.dir}/${redisnio.name}_${redisnio.ver}.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>local.org.epics</groupId>
      <artifactId>BPLTaglets</artifactId>
      <version>local</version>
      <scope>system</scope>
      <systemPath>${lib.dir}/test/BPLTaglets.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>local.org.epics</groupId>
      <artifactId>pbrawclient</artifactId>
      <version>0.2.1</version>
      <scope>system</scope>
      <systemPath>${lib.dir}/test/pbrawclient-0.2.1.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-servlet-api</artifactId>
      <version>9.0.74</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.epics</groupId>
      <artifactId>jca</artifactId>
      <version>2.4.7</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.15</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.5</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.11.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math3</artifactId>
      <version>3.6.1</version>
    </dependency>
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>31.1-jre</version>
    </dependency>
    <dependency>
      <groupId>com.hazelcast</groupId>
      <artifactId>hazelcast</artifactId>
      <version>5.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.14</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.4.16</version>
    </dependency>
    <dependency>
      <groupId>jdbm</groupId>
      <artifactId>jdbm</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>4.4.0</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.python</groupId>
      <artifactId>jython-standalone</artifactId>
      <version>2.7.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-1.2-api</artifactId>
      <version>${log4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j2-impl</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jul</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
      <version>3.4.4</version>
    </dependency>
    <dependency>
      <groupId>org.mariadb.jdbc</groupId>
      <artifactId>mariadb-java-client</artifactId>
      <version>3.3.3</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>5.7.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>3.23.0</version>
    </dependency>
    <dependency>
      <groupId>org.phoebus</groupId>
      <artifactId>core-pva</artifactId>
      <version>5.0.0</version>
    </dependency>
  </dependencies>
  <build>
    <sourceDirectory>${src.main.dir}</sourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <release>${java.version}</release>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.7.1</version>
        <executions>
          <execution>
            <id>analyze-dependencies</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <configuration>
              <failOnWarning>false</failOnWarning>
              <ignoredUnusedDeclaredDependencies>
                <dependency>org.apache.logging.log4j:log4j-slf4j2-impl</dependency>
                <dependency>org.apache.logging.log4j:log4j-jul</dependency>
              </ignoredUnusedDeclaredDependencies>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>create-api-docs-directory</id>
            <phase>initialize</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo message="ANT: Ensuring directory ${api.docs.dir} exists."/>
                <mkdir dir="${api.docs.dir}"/>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>check-mappings-file-before-javadoc</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <property name="mappings.file.abs.path" value="${project.basedir}/docs/api/mgmtpathmappings.txt"/>
                <echo message="ANT DIAGNOSTIC: Project base directory is: ${project.basedir}"/>
                <echo message="ANT DIAGNOSTIC: Expecting mgmtpathmappings.txt at: ${mappings.file.abs.path}"/>
                <available file="${mappings.file.abs.path}" property="mappings.file.is.available.by.ant"/>
                <echo message="ANT DIAGNOSTIC RESULT: Is ${mappings.file.abs.path} available? ${mappings.file.is.available.by.ant}"/>
                <fail message="ANT DIAGNOSTIC FAIL: mgmtpathmappings.txt NOT found by Ant at ${mappings.file.abs.path} during prepare-package phase!" unless="mappings.file.is.available.by.ant"/>
                <echo message="ANT DIAGNOSTIC SUCCESS: mgmtpathmappings.txt IS found by Ant at ${mappings.file.abs.path}."/>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>download-and-unpack-svg-viewer</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <property name="svg.viewer.zip.dir" value="${project.build.directory}/dependencies/svg_viewer_zip"/>
                <property name="svg.viewer.zip.file" value="${svg.viewer.zip.dir}/svg_viewer-v1.2.1.zip"/>
                <property name="svg.viewer.url" value="https://github.com/archiver-appliance/svg_viewer/archive/v1.2.1.zip"/>
                <property name="svg.viewer.base.unpacked.dir" value="${project.build.directory}/dependencies/unpacked"/>
                <echo message="Downloading SVG Viewer from ${svg.viewer.url} to ${svg.viewer.zip.file}"/>
                <mkdir dir="${svg.viewer.zip.dir}"/>
                <get src="${svg.viewer.url}" dest="${svg.viewer.zip.file}" skipexisting="true"/>
                <echo message="Unpacking SVG Viewer to ${svg.viewer.base.unpacked.dir}"/>
                <mkdir dir="${svg.viewer.base.unpacked.dir}"/>
                <unzip src="${svg.viewer.zip.file}" dest="${svg.viewer.base.unpacked.dir}"/>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>create-version-txt</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo file="${stage.dir}/org/epics/archiverappliance/staticcontent/version.txt" message="Archiver Appliance Version ${project.version}"/>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>sitespecificantscript</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <property name="ant.classes" refid="maven.runtime.classpath"/>
                <property name="archapplsite" value="${archapplsite}"/>
                <property name="sitespecificpath" value="${sitespecific.path}"/>
                <property name="stage" value="${stage.dir}"/>
                <ant antfile="${project.basedir}/build.xml" target="sitespecificbuild"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <!--
                    JAVA_HOME=/opt/java-env/JDK /opt/java-env/MAVEN/bin/mvn dependency:build-classpath -Dmdep.outputFile=cp.txt
                    FULL_CLASSPATH="target/classes:$(cat cp.txt)"
                     /opt/java-env/JDK/bin/java -cp "$FULL_CLASSPATH" org.epics.archiverappliance.mgmt.BPLServlet
                    -->
          <execution>
            <id>generateBPLActionsMappings</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${env.JAVA_HOME}/bin/java</executable>
              <workingDirectory>${project.basedir}</workingDirectory>
              <arguments>
                <argument>-classpath</argument>
                <classpath/>
                <argument>org.epics.archiverappliance.mgmt.BPLServlet</argument>
              </arguments>
              <outputFile>${api.docs.dir}/mgmtpathmappings.txt</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>copy-mgmt_scriptables-for-package</id>
            <phase>package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>scp</executable>
              <arguments>
                <argument>${java.docs.output.path}/mgmt_scriptables.txt</argument>
                <argument>${api.docs.dir}</argument>
              </arguments>
            </configuration>
          </execution>
          <!--
                     we need to copy ${java.docs.output.path}/docs/api/mgmt_scriptables.txt to ${api.docs.dir} in prepare-pacakges
                    -->
          <execution>
            <id>generateJavaDocTagletScriptables</id>
            <phase>package</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <workingDirectory>${project.basedir}</workingDirectory>
              <mainClass>org.epics.archiverappliance.common.taglets.ProcessMgmtScriptables</mainClass>
              <arguments/>
              <classpathScope>compile</classpathScope>
            </configuration>
          </execution>
          <execution>
            <id>syncStaticContentHeaderFooters</id>
            <phase>process-classes</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>org.epics.archiverappliance.mgmt.bpl.SyncStaticContentHeadersFooters</mainClass>
              <arguments>
                <argument>${src.main.dir}/org/epics/archiverappliance/mgmt/staticcontent/index.html</argument>
                <argument>${src.main.dir}/org/epics/archiverappliance/mgmt/staticcontent/</argument>
              </arguments>
              <classpathScope>compile</classpathScope>
            </configuration>
          </execution>
          <execution>
            <id>generateReleaseNotes</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>git</executable>
              <arguments>
                <argument>log</argument>
                <argument>--oneline</argument>
                <argument>remotes/origin/master</argument>
              </arguments>
              <outputFile>${stage.dir}/RELEASE_NOTES</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>sphinx</id>
            <phase>package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${sphinx.skip}</skip>
              <workingDirectory>${docs.dir}</workingDirectory>
              <executable>${docs.dir}/build_docs.sh</executable>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-initial-doc-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${docs.dir}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}</directory>
                  <includes>
                    <include>LICENSE</include>
                  </includes>
                </resource>
                <resource>
                  <directory>${src.main.dir}/edu/stanford/slac/archiverappliance/PB</directory>
                  <includes>
                    <include>EPICSEvent.proto</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-mgmtpathmappings-for-processing</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${java.docs.output.path}</outputDirectory>
              <resources>
                <resource>
                  <directory>${api.docs.dir}</directory>
                  <includes>
                    <include>mgmtpathmappings.txt</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>stage-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${stage.dir}</outputDirectory>
              <resources>
                <resource>
                  <directory>${docs.dir}</directory>
                  <includes>
                    <include>*.*</include>
                  </includes>
                  <targetPath>${api.docs.dir}</targetPath>
                </resource>
                <resource>
                  <directory>${src.main.dir}/org/epics/archiverappliance/staticcontent</directory>
                  <targetPath>org/epics/archiverappliance/staticcontent</targetPath>
                </resource>
                <resource>
                  <directory>${src.main.dir}/org/epics/archiverappliance/retrieval/staticcontent</directory>
                  <targetPath>org/epics/archiverappliance/retrieval/staticcontent</targetPath>
                </resource>
                <resource>
                  <directory>${src.main.dir}/org/epics/archiverappliance/mgmt/staticcontent</directory>
                  <targetPath>org/epics/archiverappliance/mgmt/staticcontent</targetPath>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>stage-svg-viewer-content</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${stage.dir}/org/epics/archiverappliance/retrieval/staticcontent</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/dependencies/unpacked/svg_viewer/svg_viewer-v1.2.1</directory>
                  <includes>
                    <include>**/*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--
        ### maven-javadoc-plugin  https://maven.apache.org/plugins/maven-javadoc-plugin/
        -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <source>${java.version}</source>
          <failOnError>false</failOnError>
          <doclint>none</doclint>
          <author>true</author>
          <version>true</version>
          <use>true</use>
          <links>
            <link>https://docs.oracle.com/en/java/javase/${java.version}/docs/api/</link>
          </links>
          <taglets>
            <taglet>
              <tagletClass>org.epics.archiverappliance.taglets.BPLActionTaglet</tagletClass>
            </taglet>
            <taglet>
              <tagletClass>org.epics.archiverappliance.taglets.BPLActionParamTaglet</tagletClass>
            </taglet>
            <taglet>
              <tagletClass>org.epics.archiverappliance.taglets.BPLActionEndTaglet</tagletClass>
            </taglet>
          </taglets>
          <tagletpath>${lib.dir}/test/BPLTaglets.jar</tagletpath>
          <destDir>${javadoc.output.dir}</destDir>
          <verbose>true</verbose>
          <show>protected</show>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.11.0</version>
          </dependency>
          <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>generate-javadoc</id>
            <goals>
              <goal>javadoc</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.4.0</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <webResources>
            <resource>
              <directory>${stage.dir}/org/epics/archiverappliance/staticcontent</directory>
              <targetPath>ui/comm</targetPath>
            </resource>
            <resource>
              <directory>${project.basedir}/src/resources/test</directory>
              <includes>
                <include>log4j2.xml</include>
              </includes>
              <targetPath>WEB-INF/classes</targetPath>
            </resource>
            <resource>
              <directory>${sitespecific.path}/classpathfiles</directory>
              <targetPath>WEB-INF/classes</targetPath>
            </resource>
          </webResources>
          <packagingExcludes>WEB-INF/lib/tomcat-servlet-api-*.jar</packagingExcludes>
        </configuration>
        <executions>
          <execution>
            <id>mgmt-war</id>
            <phase>package</phase>
            <goals>
              <goal>war</goal>
            </goals>
            <configuration>
              <classifier>mgmt</classifier>
              <webXml>${src.main.dir}/org/epics/archiverappliance/mgmt/WEB-INF/web.xml</webXml>
              <webResources combine.children="append">
                <resource>
                  <directory>${stage.dir}/org/epics/archiverappliance/mgmt/staticcontent</directory>
                  <targetPath>ui</targetPath>
                </resource>
                <resource>
                  <directory>${src.main.dir}/org/epics/archiverappliance/config/persistence</directory>
                  <includes>
                    <include>*.sql</include>
                  </includes>
                  <targetPath>install</targetPath>
                </resource>
                <resource>
                  <directory>${docs.dir}/docs/build</directory>
                  <targetPath>ui/help</targetPath>
                </resource>
                <resource>
                  <directory>${docs.dir}/docs/source/samples</directory>
                  <includes>
                    <include>deployMultipleTomcats.py</include>
                  </includes>
                  <targetPath>install</targetPath>
                </resource>
                <resource>
                  <directory>${src.main.dir}/org/epics/archiverappliance/common/scripts</directory>
                  <targetPath>install/pbutils</targetPath>
                </resource>
              </webResources>
            </configuration>
          </execution>
          <execution>
            <id>etl-war</id>
            <phase>package</phase>
            <goals>
              <goal>war</goal>
            </goals>
            <configuration>
              <classifier>etl</classifier>
              <webXml>${src.main.dir}/org/epics/archiverappliance/etl/WEB-INF/web.xml</webXml>
            </configuration>
          </execution>
          <execution>
            <id>engine-war</id>
            <phase>package</phase>
            <goals>
              <goal>war</goal>
            </goals>
            <configuration>
              <classifier>engine</classifier>
              <webXml>${src.main.dir}/org/epics/archiverappliance/engine/WEB-INF/web.xml</webXml>
              <webResources combine.children="append">
                <resource>
                  <directory>${lib.dir}</directory>
                  <includes>
                    <include>${jamtio.name}_${jamtio.ver}.jar</include>
                    <include>${redisnio.name}_${redisnio.ver}.jar</include>
                  </includes>
                  <targetPath>WEB-INF/lib</targetPath>
                </resource>
              </webResources>
            </configuration>
          </execution>
          <execution>
            <id>retrieval-war</id>
            <phase>package</phase>
            <goals>
              <goal>war</goal>
            </goals>
            <configuration>
              <classifier>retrieval</classifier>
              <webXml>${src.main.dir}/org/epics/archiverappliance/retrieval/WEB-INF/web.xml</webXml>
              <webResources combine.children="append">
                <resource>
                  <directory>${stage.dir}/org/epics/archiverappliance/retrieval/staticcontent</directory>
                  <targetPath>ui</targetPath>
                </resource>
              </webResources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.7.1</version>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/release.xml</descriptor>
          </descriptors>
          <finalName>archappl_v${project.version}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.4.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${api.docs.dir}</directory>
            </fileset>
            <fileset>
              <directory>${docs.dir}</directory>
              <includes>
                <include>LICENSE</include>
                <include>EPICSEvent.proto</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <!--
 profile becomes active iff the env var is defined
-->
  <profiles>
    <profile>
      <id>env-archappl-siteid</id>
      <activation>
        <property>
          <name>env.ARCHAPPL_SITEID</name>
        </property>
      </activation>
      <properties>
        <archapplsite>${env.ARCHAPPL_SITEID}</archapplsite>
      </properties>
    </profile>
  </profiles>
</project>
